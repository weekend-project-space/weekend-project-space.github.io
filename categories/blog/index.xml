<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Weekend Project</title>
    <link>https://weekendproject.space/categories/blog/</link>
    <description>Recent content in blog on Weekend Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2022</copyright>
    <lastBuildDate>Fri, 21 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://weekendproject.space/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bootstrap GPT 如何使用</title>
      <link>https://weekendproject.space/posts/bootstrap-gpt-start/</link>
      <pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://weekendproject.space/posts/bootstrap-gpt-start/</guid>
      <description>第一步： 访问 https://github.com/weekend-project-space/bootstrap-gp 点击 code download zip 按钮 或通过命令行下载
&amp;gt; git clone https://github.com/weekend-project-space/bootstrap-gpt.git 第二步： 进入项目文件夹 或命令行进入 , 安装依赖（ 请保证本地有 python3 的运行环境）
&amp;gt; cd ./bootstrap-gpt &amp;gt; pip install openai &amp;amp;&amp;amp; pip install beautifulsoup4 &amp;amp;&amp;amp; pip install jsonpath &amp;amp;&amp;amp; pip install jinja2 第三步： 运行项目
&amp;gt; python3 main.py 此时命令行会输出
Welcome to Bootstrap GPT sample &amp;gt; use summarize &amp;gt; 然后可以输入 help 了解有那些命令，常用命令有三个
 ls: 查看有那些功能 use xxx: 使用 xxx 功能 serve: 开启 http server 功能可以网页访问   进阶 正常情况下到这里就可以了，如果想要更多功能可以在 bootstrap 文件夹下创建 json 文件，一个功能文件如下</description>
    </item>
    
    <item>
      <title>Bootstrap GPT 是什么</title>
      <link>https://weekendproject.space/posts/bootstrap-gpt/</link>
      <pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://weekendproject.space/posts/bootstrap-gpt/</guid>
      <description>故事的开始 前些日子受 auto gpt 的启发，这次的输出当作下次的输入，想着能否将 prompts 当作一种编程的手段，而且让其支持联网 ，比如 写一个 ppt 或 文档 或总结网页内容 等等 让它去引导你，就像一个问卷调查 然后给你生成你需要的结果。
然后当天下午就写了一个出来是 cmd 的交互方式，验证成功
后面在社区有人回复说网络的方式更好，然后就又增加了 http 的方式，这里有一个展示视频可以展示现在它能做的事情
这些是如何运作的？
我们先通过 ls 命令会罗列出现在有那些功能:
ls
summarize : 总结网页 v2-hot : 查看v2最近热门帖子讲了什么 while : 循环次数测试 hot : 查看webfollow最近热门帖子讲了什么 friend : chat 聊天 引导助手 writecode : code boot spider : wiki 引导助手 然后 使用 use summarize 这个功能作为演示， bootstarp-gpt 会加载 bootstarp 下的文件，这里有一个总结网页讲了什么的 summarize.json 文件
{ &amp;#34;author&amp;#34;: &amp;#34;ruidong&amp;#34;, &amp;#34;date&amp;#34;: &amp;#34;2023-04-19&amp;#34;, &amp;#34;version&amp;#34;: &amp;#34;0.1&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;总结网页&amp;#34;, &amp;#34;boot&amp;#34;: [ { &amp;#34;w&amp;#34;: &amp;#34;请输入网址&amp;#34;, &amp;#34;r&amp;#34;: &amp;#34;r0&amp;#34;, &amp;#34;p&amp;#34;: &amp;#34;spider:{{r0}}:select=.</description>
    </item>
    
    <item>
      <title>ChatGPT免费在线体验网址</title>
      <link>https://weekendproject.space/posts/chat-gpt-free/</link>
      <pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://weekendproject.space/posts/chat-gpt-free/</guid>
      <description>今天在网上逛社区的时候发现了一个ChatGPT 在线体验网站收集列表的项目
里面收集了很多可以无需代理、无需翻墙 、无需 KEY 的三方站点，这对于国内的朋友或许有很大的帮助。
对于想体验更多 ai 相关应用的朋友可以试试这个网站aihub.bitmagic收录了近千个 ai 相关的应用与模型。
摘抄过来前 100 个
 [⭐⭐] https://chat.binjie.site:7777 [⭐⭐] https://chat.yqcloud.top [⭐⭐] https://www.aitoolgpt.com [⭐⭐] https://www.chatsverse.xyz [⭐] https://chat.ninvfeng.xyz [⭐] http://chat.apigpt.cn [⭐] http://chatgpt.mhacd.com [⭐] http://gpt.mxnf.store [⭐] http://itecheasy.com.cn [⭐] https://1.hktwilight.eu.org [⭐] https://2618.eu.org [⭐] https://6758tkma.chattobot.xyz [⭐] https://676888.xyz [⭐] https://94gpt.com [⭐] https://ai-toolbox.codefuture.top [⭐] https://ai.6ix.com [⭐] https://ai.aiyuanyuzhou.com [⭐] https://ai.anlu.fun [⭐] https://ai.bigtear.com [⭐] https://ai.chilfish.top [⭐] https://ai.czhuangjia.top [⭐] https://ai.gjwa.ml [⭐] https://ai.hixqz.com [⭐] https://ai.i-misaka.com [⭐] https://ai.jiangyuesong.me [⭐] https://ai.liuks.cn [⭐] https://ai.lpsee.com [⭐] https://ai.</description>
    </item>
    
    <item>
      <title>ChatGPT小工具(用Chat GPT 编程?)</title>
      <link>https://weekendproject.space/posts/chat-gpt-tools/</link>
      <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://weekendproject.space/posts/chat-gpt-tools/</guid>
      <description>最近写了2个Chat GPT的小玩具，有网页版，也有浏览器插件，源码和效果在首页有链接，总体来说开发这种小工具还是很简单的，官方提供了api使用文档，只需要copy过来做一个简单的用户界面即可，现在网上有很多套壳版，最开始使用体验还不错,不过现在大多数情况下都在用自己开发的浏览器插件 在浏览器任意位置 ctrl+shirt+x就可以欢迎对话。
用Chat GPT 编程*
对了，现在写代码开始让Chat GPT 给输出一个基本的大纲，然后在进行修改和调整，lisp4js这个项目的parse模块就用到了GPT编写代码大纲，然后手动编写了对字符串类型和symbol类型的支持，这大大提高了编码效率；evaluate模块最开始是用Chat GPT生成的，但对于自定义函数的支持并不友好，及没有作用域，于是全部删除开始手动编码和调试，然后今天完成了初版，以前是面向谷歌编程以后要学习面向Chat GPT编程了及学习更多的prompt，编码的入门门槛也在此降低了许多，用人类语言告诉Chat GPT 然后他告诉你对应的代码，然后再做微调即可，我们需要做的就是学会和其更高效的对话。
这是一个示例
user：
 用js写一个lisp的parser
 ChatGPT:
 由于LISP的语法比较复杂，写一个完整的解析器需要大量的代码量，因此这里只提供一个简单的LISP格式解析器的实现示例，仅用于学习和参考。
  以下是一个简单的LISP解析器的实现，它包括了LISP的元素类型、符号表达式、数字表达式、列表表达式等：
 function parseLisp(input) { input = input.trim(); if (input[0] === &amp;quot;(&amp;quot;) { let list = []; input = input.substring(1, input.length - 1).trim(); while (input.length &amp;gt; 0) { let elem = parseLisp(input); list.push(elem.expr); input = elem.rest.trim(); } return {&amp;quot;expr&amp;quot;:list, &amp;quot;rest&amp;quot;:&amp;quot;&amp;quot;}; } else if (input[0] === &amp;quot;\&amp;quot;&amp;quot;) { let end = input.</description>
    </item>
    
    <item>
      <title>上阮老师的科技爱好者周刊了？</title>
      <link>https://weekendproject.space/posts/webfollow-ruanyifeng-02-03/</link>
      <pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://weekendproject.space/posts/webfollow-ruanyifeng-02-03/</guid>
      <description>2月3号，早上像往常一样上网站看订阅的信息，但怎么都加载不出来，看了一下后台数据库连接老是超时，起初以为是数据库数据多了的缘故，于是在线下测试了一下，很流畅，然后就向往常一样看了下访问统计，一看惊呆，2000+pv 100+访客，网站被攻击了吗？看了下来源，原来是来自阮老师的网站，一切就都联系起来了，然后紧急对网站做了改造，加了几处缓存，网站暂时可用了， 关于上阮老师周刊这件事,起因是三周前在 github 给阮老师周刊投了搞，于是 科技爱好者周刊 240 期 教育年限可以缩短吗？ 便有了 webfollow 的名字，感谢阮老师！
最近几天累积pv近3w,相当于之前两个月的访问量，不得不感叹阮老师流量挺高的， 最近新增注册用户300+ 访客注册转化率12%-15%， 对这个数据还是比较满意的；关于更好的长期提供服务这块收费方式一直不明朗，近期不打算收费，但也有考虑收费的形式: &amp;ldquo;通过过滤信息的方式给用户推送高价值的订阅RSS信息 或则私有化部署的形式获取一些收益&amp;rdquo;，这一切还都停留在想法阶段，目前能做的就是把功能做的简单 高效 好用 易用 美观 和三方做出差异来，RSS阅读器这个类别下有很多同质化产品 做的比较大的有 feedly、inoreader 、 Reeder等产品，订阅源相同的情况下 他们目前在组织内容形式上没有什么差异，更多是内容的布局有所不同，打算后期在组织内容的形式上做出些好玩好用的东西来，如果你对这块感兴趣可以和我联系。</description>
    </item>
    
    <item>
      <title>WebFollow 22年10月份最新一组数据</title>
      <link>https://weekendproject.space/posts/webfollow-data-22-10-20/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://weekendproject.space/posts/webfollow-data-22-10-20/</guid>
      <description>访问数据
 22-10-08 上线两个月   累计 PV 13,155 UV 2,502 Feed 304
  22-10-18 上线两个月10天   累计PV 19,759 UV 3,030 Feed 495
 功能开发
上线后累计更新修改提交100余次 新增小功能二十几项
 增加了排序方式 新增了system-bar color 增加了路由支持 article 不跳页 增加了米黄色主题 增加了页面标题头跟随文章调整 调整了a 标签新窗口 增加了登录收藏 同步 阅读器布局调整 pc最小化调整 channel页增加type 查看 channel 背景图改为最近最热 增加了channel Icon 订阅提示 增加问题反馈 布局切换+ 动画 增加了三栏 卡片 标题 视图 增加了排序算法 增加了订阅快捷搜索（知乎 b站 微博） 增加了下拉加载 增加了加载骨架屏 pwa 触发添加桌面 若干次页面布局调整 若干次后台接口调整 优化了加载速度 &amp;hellip;&amp;hellip;  访问来源</description>
    </item>
    
    <item>
      <title>一个idea列表</title>
      <link>https://weekendproject.space/posts/idea-list/</link>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://weekendproject.space/posts/idea-list/</guid>
      <description>你投票我实现 我有一个 todo 列表里面有很多有意思的想法，它们只是想法就待在那里，也许你也有这么一个 todo 列表。
这是从我的想法列表里筛选出的几个
你可以为它投票，我会从里面筛选出排名最高的几个然后进行选择 ，用周末的时间尝试把它实现
  idea-magic (将想法变成现实，我支持你的想法，这也是我的想法，有点类似product hunt)
  rss-&amp;gt;newsletter (一个可以将rss转成newsletter的小工具，站长和个人都可以免费使用)
  同网互传 （这个貌似有了一个，在想是否要做）
  vrhub (一个vr资源共享库 ，可以在线观看或体验vr游戏等)
  rss web 阅读器（pwa）
  可以在这里投票哦，你也可以贴出你的想法，让大家为它投票
截止日期2022-08-06
目前打算先做rss-&amp;gt;newsletter ，拉了一个内测码的Q群756071313，先到先得，逃。</description>
    </item>
    
    <item>
      <title>Weekend Project 上线了</title>
      <link>https://weekendproject.space/posts/weekend-project-web-site/</link>
      <pubDate>Fri, 29 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://weekendproject.space/posts/weekend-project-web-site/</guid>
      <description>本站采用了Hugo 进行驱动 ，主题采用的是 hugo-paper， 在github进行托管， 花费了2个小时的时间进行选型搭建。
基地 这里是一个发布项目及通知的基地，后面我会尝试加入订阅功能，这样可以更方便的找到我，在国内如rss 和email 使用频率相对较低，但是微信公众号我个人不太喜欢，如果你有好的推荐也可以联系我，这是我的邮箱 c3VueHpnQGdtYWlsLmNvbQ==
目前打算先把栏目分成两类一类是周末项目，一类是周末项目相关的博客，在项目里面会谈到思路和效果展示等，博客会更新一些项目后续有趣的一些事情
进入飞船 这是一个小的尝试，我已经在考虑后面要做点什么小项目了。</description>
    </item>
    
  </channel>
</rss>
